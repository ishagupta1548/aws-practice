# # Welcome to Serverless!
# #
# # This file is the main config file for your service.
# # It's very minimal at this point and uses default values.
# # You can always add more config options for more control.
# # We've included some commented out config examples here.
# # Just uncomment any of them to get that config option.
# #
# # For full config options, check the docs:
# #    docs.serverless.com
# #
# # Happy Coding!

# service: practice
# # app and org for use with dashboard.serverless.com
# #app: your-app-name
# #org: your-org-name

# # You can pin your service to only deploy with a specific Serverless version
# # Check out our docs for more details
# frameworkVersion: '2'

# provider:
#   name: aws
#   runtime: nodejs12.x
#   lambdaHashingVersion: 20201221
#   iamRoleStatements:
#     - Effect: Allow
#       Action:
#         - dynamodb:*
#       Resource: '*'
# functions:
#   hello:
#     handler: index.handler
#     events:
#       - http: 
#           path: /isha/{ID}
#           method: get
# resources:
#   Resources:
#     UsersTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         AttributeDefinitions:
#           - AttributeName: userId
#             AttributeType: S
#         KeySchema:
#           - AttributeName: userId
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
#         TableName: 'information3'
# # you can add CloudFormation resource templates here
# #resources:
# #  Resources:
# #    NewResource:
# #      Type: AWS::S3::Bucket
# #      Properties:
# #        BucketName: my-new-bucket
# #  Outputs:
# #     NewOutput:
# #       Description: "Description for the output"
# #       Value: "Some output value"


service: aws-node-express-dynamodb-api

frameworkVersion: '2'


provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    USERS_TABLE: information4

functions:
  api:
    handler: handler.handler
    events:
      - http:
          path: /isha
          method: get
      - http:
          path: /{proxy+}
          method: ANY   

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: information4
